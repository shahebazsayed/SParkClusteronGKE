# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml
#This pipeline code builds k8 GKE cluster and deploys spark application on that 

steps:
#step0
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/gcloud-slim']
  #step1
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/gcloud']
  #step2
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/kubectl']
#steps:
- name: "gcr.io/cloud-builders/mvn"
  args:['package']
  objects: location: "gs://${_BUCKET}/"
  paths: "target/${_TARGET}"
# Simple sanity check: invoke the new gcloud container to confirm that it was
# built correctly.
#step3
- name: 'gcr.io/$PROJECT_ID/gcloud'
  args: ['info']
  #step4
- name: 'gcr.io/$PROJECT_ID/gcloud-slim'
  args: ['info']
# Step5
- name: 'gcr.io/$PROJECT_ID/gcloud'
  entrypoint: bash
  args: 
  - '-c'
  - |
    gcloud config set compute/zone us-central1-a
    gcloud container clusters create spark-on-gke --machine-type n1-standard-2

# Step6
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: bash
  args: 
  - '-c'
  - |
    kubectl create -f spark-master-controller.yaml
    kubectl create -f spark-master-service.yaml
    kubectl create -f spark-worker-controller.yaml



images:
- 'gcr.io/$PROJECT_ID/gcloud'
- 'gcr.io/$PROJECT_ID/gcloud-slim'
- 'gcr.io/$PROJECT_ID/kubectl'
