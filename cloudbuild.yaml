# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml

steps:
#step1
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/gcloud-slim']
  #step2
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/gcloud', '-f', 'Dockerfile', '.']

# Simple sanity check: invoke the new gcloud container to confirm that it was
# built correctly.
#step3
- name: 'gcr.io/$PROJECT_ID/gcloud'
  args: ['info']
- name: 'gcr.io/$PROJECT_ID/gcloud-slim'
  args: ['info']
# Step4
- name: 'gcr.io/$PROJECT_ID/gcloud'
  entrypoint: bash
  args: 
  - '-c'
  - |
    gcloud config set compute/zone us-central1-a
    gcloud container clusters create spark-on-gke --machine-type n1-standard-2
# Step5
#- name: 'gcr.io/cloud-builders/docker'
#  entrypoint: gcloud container clusters get-credentials --REGION "us-central1-a" "$CLOUDSDK_CONTAINER_CLUSTER"
 # args: ['build', '--tag=gcr.io/$PROJECT_ID/kubectl', '.']
  
# Step6
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: bash
  args: 
  - '-c'
  - |
    kubectl create -f namespace-spark-cluster.yaml
    CURRENT_CONTEXT=$(kubectl config view -o jsonpath='{.current-context}')
    USER_NAME=$(kubectl config view -o jsonpath='{.contexts[?(@.name == "'"${CURRENT_CONTEXT}"'")].context.user}')
    CLUSTER_NAME=$(kubectl config view -o jsonpath='{.contexts[?(@.name == "'"${CURRENT_CONTEXT}"'")].context.cluster}')
    kubectl config set-context spark --namespace=spark-cluster --cluster=$(kubectl config view -o jsonpath='{.contexts[?(@.name == "'"${CURRENT_CONTEXT}"'")].context.cluster}') --user=${USER_NAME}
    kubectl config use-context spark
    kubectl create -f spark-master-controller.yaml
    kubectl create -f spark-master-service.yaml
    kubectl create -f spark-worker-controller.yaml



images:
- 'gcr.io/$PROJECT_ID/gcloud'
- 'gcr.io/$PROJECT_ID/gcloud-slim'
- 'gcr.io/$PROJECT_ID/kubectl'
